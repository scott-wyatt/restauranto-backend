"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@fabrix/fabrix/dist/common");
class Event extends common_1.FabrixGeneric {
    constructor(app) {
        super(app);
        Object.defineProperties(this, {
            pubSub: {
                enumerable: false,
                value: app.pubSub
            }
        });
    }
    get id() {
        return this.constructor.name.replace(/(\w+)Event/, '$1').toLowerCase();
    }
    get name() {
        return this.constructor.name;
    }
    get events() {
        const notAllowed = ['subscribe'];
        const events = [];
        if (this.methods) {
            this.methods.forEach(method => {
                if (notAllowed.indexOf(method) === -1) {
                    events.push(`${this.name}.${method}`);
                }
            });
        }
        return events;
    }
    get subscribers() {
        const subscribers = [];
        if (this.pubSub && this.methods) {
            const messages = Object.keys(this.pubSub.getMessages());
            messages.forEach(message => {
                if (this.methods.indexOf(message) > -1) {
                    subscribers.push(`${this.name}.${message}`);
                }
            });
        }
        return subscribers;
    }
    get subscribed() {
        const subscribed = [];
        if (this.pubSub && this.methods) {
            const messages = Object.keys(this.pubSub.getMessages());
            messages.forEach(message => {
                if (this.methods.indexOf(message) > -1) {
                    subscribed.push(`${this.name}.${message}`);
                }
            });
        }
        return subscribed;
    }
}
exports.Event = Event;
