"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@fabrix/fabrix/dist/common");
const spool_sequelize_1 = require("@fabrix/spool-sequelize");
const shortId = require("shortid");
class Event extends common_1.FabrixModel {
    static config(app, Sequelize) {
        return {
            options: {
                underscored: true,
                hooks: {
                    beforeCreate: [
                        (values, options) => {
                            values.request = `req_${shortId.generate()}`;
                        }
                    ]
                }
            }
        };
    }
    static schema(app, Sequelize) {
        return {
            object: {
                type: Sequelize.STRING
            },
            object_id: {
                type: Sequelize.INTEGER
            },
            data: {
                type: Sequelize.JSONB,
                defaultValue: {}
            },
            message: {
                type: Sequelize.TEXT
            },
            pending_attempts: {
                type: Sequelize.INTEGER,
                defaultValue: 0
            },
            request: {
                type: Sequelize.STRING
            },
            type: {
                type: Sequelize.STRING
            },
            live_mode: {
                type: Sequelize.BOOLEAN,
                defaultValue: Boolean(app.config.get('events.live_mode'))
            }
        };
    }
    static get resolver() {
        return spool_sequelize_1.SequelizeResolver;
    }
    static associate(models) {
        models.Event.hasMany(models.EventSubscriber, {
            as: 'subscribers',
            onDelete: 'CASCADE'
        });
        models.Event.hasMany(models.EventItem, {
            as: 'objects',
            foreignKey: 'event_id',
            onDelete: 'CASCADE'
        });
    }
}
exports.Event = Event;
