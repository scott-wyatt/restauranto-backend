"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@fabrix/fabrix/dist/common");
const spool_sequelize_1 = require("@fabrix/spool-sequelize");
const _ = require("lodash");
const index_1 = require("../../enums/index");
class EventSubscriber extends common_1.FabrixModel {
    static config(app, Sequelize) {
        return {
            options: {
                underscored: true
            }
        };
    }
    static schema(app, Sequelize) {
        return {
            request: {
                type: Sequelize.STRING,
                unique: 'subscriberUniqueKey'
            },
            name: {
                type: Sequelize.STRING,
                notNull: false,
                unique: 'subscriberUniqueKey'
            },
            response: {
                type: Sequelize.TEXT
            },
            attempts: {
                type: Sequelize.INTEGER,
                defaultValue: 0
            },
            last_attempt: {
                type: Sequelize.DATE,
                defaultValue: Sequelize.NOW
            },
            status: {
                type: Sequelize.ENUM,
                values: _.values(index_1.EVENT_SUBSCRIBER_STATUS),
                defaultValue: index_1.EVENT_SUBSCRIBER_STATUS.PENDING
            }
        };
    }
    static get resolver() {
        return spool_sequelize_1.SequelizeResolver;
    }
    static associate(models) {
        models.EventSubscriber.belongsTo(models.Event, {});
    }
}
exports.EventSubscriber = EventSubscriber;
