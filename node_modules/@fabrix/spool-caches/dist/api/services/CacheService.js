"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@fabrix/fabrix/dist/common");
const cacheManager = require("cache-manager");
class CacheService extends common_1.FabrixService {
    constructor(app) {
        super(app);
    }
    getStore(name) {
        if (!name) {
            name = this.app.config.get('caches.defaults')[0];
        }
        if (this.app.cacheInstances[name]) {
            return this.app.cacheInstances[name];
        }
        else {
            throw new Error('unknown store named ' + name);
        }
    }
    getMultiCachingStore(names) {
        if (!names || names.length === 0) {
            names = this.app.config.get('caches.defaults');
        }
        const name = names.join('_');
        if (this.app.cacheInstances[name]) {
            return this.app.cacheInstances[name];
        }
        else {
            const stores = [];
            names.forEach(type => {
                stores.push(this.getStore(type));
            });
            this.app.cacheInstances[name] = cacheManager.multiCaching(stores);
            return this.app.cacheInstances[name];
        }
    }
}
exports.CacheService = CacheService;
