export declare class Configuration extends Map<any, any> {
    immutable: boolean;
    env: {};
    static flattenTree(tree?: {}): {
        [key: string]: any;
    };
    static initialResources(tree: any, resources?: any[]): any;
    static buildConfig(initialConfig?: {
        env?: {
            [key: string]: any;
        };
    }, nodeEnv?: string): any;
    constructor(configTree?: {
        [key: string]: any;
    }, processEnv?: {
        [key: string]: any;
        NODE_ENV?: string;
    });
    private _reverseFlattenSet(key, value);
    private _flattenSet(key, value);
    set(key: string, value: any): any;
    merge(configTree: {
        [key: string]: any;
    }, configAction?: string): {
        hasKey: boolean;
        key: any;
    }[];
    freeze(): void;
    unfreeze(): void;
}
