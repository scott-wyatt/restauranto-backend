"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require("../");
class DatastoreSpool extends _1.Spool {
    static get type() {
        return 'datastore';
    }
    constructor(app, config) {
        if (!config) {
            throw new Error('DatastoreSpool must be subclassed. Do not load it directly.');
        }
        super(app, config);
    }
    initialize() {
        return __awaiter(this, void 0, void 0, function* () {
            Object.entries(this.app.models).forEach(([modelName, model]) => {
                const modelConfig = model.constructor.config(this.app, this._datastore);
                Object.assign(model, { store: modelConfig['store'] || this.app.config.get('models.defaultStore') });
                Object.assign(model, { migrate: modelConfig['migrate'] || this.app.config.get('models.migrate') || 'safe' });
            });
            return Promise.resolve();
        });
    }
}
exports.DatastoreSpool = DatastoreSpool;
