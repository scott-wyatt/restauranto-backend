"use strict";
var __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {
    return new (P || (P = Promise))(function (resolve, reject) {
        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }
        function rejected(value) { try { step(generator["throw"](value)); } catch (e) { reject(e); } }
        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }
        step((generator = generator.apply(thisArg, _arguments || [])).next());
    });
};
Object.defineProperty(exports, "__esModule", { value: true });
const common_1 = require("@fabrix/fabrix/dist/common");
const validator_1 = require("./validator");
const config = require("./config/index");
const pkg = require("../package.json");
const api = require("./api/index");
class EmailSpool extends common_1.Spool {
    constructor(app) {
        super(app, {
            config: config,
            pkg: pkg,
            api: api
        });
    }
    validate() {
        return __awaiter(this, void 0, void 0, function* () {
            if (!this.app.config.get('email')) {
                return Promise.reject(new Error('No configuration found at config.email!'));
            }
            return Promise.all([
                validator_1.Validator.validateEmailConfig(this.app.config.get('email'))
            ]);
        });
    }
    configure() {
    }
}
exports.EmailSpool = EmailSpool;
