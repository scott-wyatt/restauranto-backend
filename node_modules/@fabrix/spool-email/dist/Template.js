"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const events_1 = require("events");
const common_1 = require("@fabrix/fabrix/dist/common");
const ejs = require("ejs");
class Template extends common_1.FabrixGeneric {
    constructor(app) {
        if (!(app instanceof events_1.EventEmitter)) {
            throw new Error('The "app" argument must be of type EventEmitter');
        }
        super(app);
        this._app = app;
        Object.defineProperties(this, {
            ejs: {
                enumerable: false,
                value: function (input, data, options) {
                    input = input || '';
                    data = data || {};
                    options = options || {};
                    return ejs.render(input, data, options);
                },
                writable: true
            }
        });
        this.app.emit(`controller:${this.id}:constructed`, this);
    }
    get __() {
        if (this.app.__) {
            return this.app.__;
        }
        else {
            throw new Error('Missing spool-i18n, make sure it is included in app.main.spools');
        }
    }
    get app() {
        return this._app;
    }
    get id() {
        return this.constructor.name.replace(/(\w+)Template/, '$1').toLowerCase();
    }
    get name() {
        return this.constructor.name;
    }
    get templates() {
        const notAllowed = ['ejs'];
        const templates = [];
        if (this.methods) {
            this.methods.forEach(method => {
                if (notAllowed.indexOf(method) === -1) {
                    templates.push(`${this.name}.${method}`);
                }
            });
        }
        return templates;
    }
}
exports.Template = Template;
